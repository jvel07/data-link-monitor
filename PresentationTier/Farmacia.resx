<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wC6zUt3AHxzWdKtFFKUqg//2Q==
</value>
  </data>
</root>